#include "constant.h"
#include "responseheader.h"

ResponseHeader::ResponseHeader() : ResponseHeader(-1, -1) { }

ResponseHeader::ResponseHeader(uint8_t module_id, uint8_t register_id) : 
        ResponseHeader(module_id, register_id, NO_DATA_ID) { }

ResponseHeader::ResponseHeader(uint8_t module_id, uint8_t register_id, uint8_t data_id) : 
        module_id(module_id), register_id(register_id), data_id(data_id) { }

ResponseHeader::ResponseHeader(const ResponseHeader &original) :
        module_id(original.module_id), register_id(original.register_id), data_id(original.data_id) { }

bool ResponseHeader::operator ==(const ResponseHeader& other) const {
    return module_id == other.module_id && register_id == other.register_id && data_id == other.data_id;
}

namespace std {

size_t hash<ResponseHeader>::operator()(const ResponseHeader& key) const {
    ///< Generated by IntelliJ
    size_t result = (size_t) key.module_id;
    result = 31 * result + (size_t) key.register_id;
    result = 31 * result + (size_t) key.data_id;
    return result;
}

}
